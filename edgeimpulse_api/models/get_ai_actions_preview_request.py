# coding: utf-8

"""
    Edge Impulse API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr
from edgeimpulse_api.models.ai_actions_data_category import AIActionsDataCategory

class GetAIActionsPreviewRequest(BaseModel):
    data_preview_category: AIActionsDataCategory = Field(..., alias="dataPreviewCategory")
    data_without_metadata_key: Optional[StrictStr] = Field(None, alias="dataWithoutMetadataKey")
    max_data_preview_count: StrictInt = Field(..., alias="maxDataPreviewCount")
    __properties = ["dataPreviewCategory", "dataWithoutMetadataKey", "maxDataPreviewCount"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = False

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> GetAIActionsPreviewRequest:
        """Create an instance of GetAIActionsPreviewRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> GetAIActionsPreviewRequest:
        """Create an instance of GetAIActionsPreviewRequest from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return GetAIActionsPreviewRequest.construct(**obj)

        _obj = GetAIActionsPreviewRequest.construct(**{
            "data_preview_category": obj.get("dataPreviewCategory"),
            "data_without_metadata_key": obj.get("dataWithoutMetadataKey"),
            "max_data_preview_count": obj.get("maxDataPreviewCount")
        })
        return _obj

